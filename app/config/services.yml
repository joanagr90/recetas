# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']
    
    RecetasBundle\Controller\:
        resource: '../../src/RecetasBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'


    #para registrar una extensiÃ³n
    RecetasBundle.twig.RecetasExtension:
        class: RecetasBundle\Twig\RecetasExtension
        tags:
            - { name: twig.extension }

    mis_recetas.ultimas_recetas:
        class: RecetasBundle\Model\UltimasRecetas
        arguments: ["@doctrine.orm.entity_manager"]

    #TEMA - 7
    #Lanzar eventos en aplicación Symfony para registrar un listener.

    mis_recetas.recetas_listener:
        class: RecetasBundle\Event\listener
        arguments: ["@mailer"]
        tags:
            - { name: kernel.event_listener, event: receta.create, method: onRecetaCreada }